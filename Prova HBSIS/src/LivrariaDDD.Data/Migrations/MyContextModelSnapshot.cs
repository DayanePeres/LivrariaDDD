// <auto-generated />
using System;
using LivrariaDDD.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Entities.AutorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateAt");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt");

                    b.HasKey("Id");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("Domain.Entities.Editoraentity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateAt");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt");

                    b.HasKey("Id");

                    b.ToTable("Editora");
                });

            modelBuilder.Entity("Domain.Entities.LivroAutorEntity", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime?>("CreateAt");

                    b.Property<int>("Qtde");

                    b.Property<DateTime?>("UpdateAt");

                    b.Property<int>("codAutor");

                    b.Property<int>("codLivro");

                    b.HasKey("Id");

                    b.ToTable("LivroAutor");
                });

            modelBuilder.Entity("Domain.Entities.LivroEditoraEntity", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime?>("CreateAt");

                    b.Property<int>("Qtde");

                    b.Property<DateTime?>("UpdateAt");

                    b.Property<int>("codEditora");

                    b.Property<int>("codLivro");

                    b.HasKey("Id");

                    b.ToTable("LivroEditora");
                });

            modelBuilder.Entity("Domain.Entities.LivroEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AnoEdicao");

                    b.Property<DateTime?>("CreateAt");

                    b.Property<string>("Genero")
                        .HasMaxLength(50);

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt");

                    b.HasKey("Id");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("Domain.Entities.LivroAutorEntity", b =>
                {
                    b.HasOne("Domain.Entities.AutorEntity", "Autor")
                        .WithMany("ListLivroAutor")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Entities.LivroEntity", "Livro")
                        .WithMany("ListLivroAutor")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Domain.Entities.LivroEditoraEntity", b =>
                {
                    b.HasOne("Domain.Entities.Editoraentity", "Editora")
                        .WithMany("ListLivroEditora")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Entities.LivroEntity", "Livro")
                        .WithMany("ListLivroEditora")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
